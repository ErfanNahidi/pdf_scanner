name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'   # triggers only on version tags like v1.0.0

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    # You must install dependencies your project needs here
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        # Add your other needed packages here

    # Build Windows executable (example with PyInstaller)
    - name: Build Windows exe (wine)
      if: runner.os == 'Linux'
      run: |
        # Install Wine for Windows build (simplified, may need tweaking)
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install -y wine32 wine64
        python -m PyInstaller --onefile your_main_script.py --name PDFScanner.exe
      # Note: cross-compiling Windows exe on Linux via Wine may be tricky â€” best to build on Windows runner

    # Build macOS app (needs macOS runner)
    - name: Build macOS app
      if: runner.os == 'macOS'
      run: |
        python -m pip install pyinstaller
        python -m PyInstaller your_main_script.py --name PDFScanner.app
        zip -r PDFScanner.app.zip PDFScanner.app

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Windows installer
      if: runner.os == 'Linux'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/PDFScanner.exe
        asset_name: PDFScanner-${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS app bundle zip
      if: runner.os == 'macOS'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/PDFScanner.app.zip
        asset_name: PDFScanner-${{ github.ref_name }}.app.zip
        asset_content_type: application/zip
